###################################
### Create by: Chang Yu
### Date: 2019-03-10
### Email: yuchang924@hotmail.com
###################################

rm(list=ls())
options(stringsAsFactors=F)
setwd(".../")  #users set by themselves
 
# install packages
if(F){
  BiocManager::install(c("affy","limma"))
  install.packages(c("pheatmap","ggplot2"))
}

# Load the required packages
library(affy)
library(limma)
library(pheatmap)
library(ggplot2)

# Download the CEL file of GSE113513 first from: https://share.weiyun.com/5cfPYZj Codeï¼šjtainf
CEL <- ReadAffy()
sampleNames(CEL) #choose CEL.file
exp <- rma(CEL)
total_exp <- as.data.frame(exprs(exp))
total_exp$ID <- rownames(total_exp)
probeid <- read.csv('PrimeView.na36.annot.csv',header=T,sep=',')
exp2ID <- merge(probeid,total_exp,by='ID') 
expreSet<- exp2ID
expreSet<-expreSet[,-c(1,3)] 
expreSet<- aggregate(expreSet[,2:29],list(expreSet[,1]),mean)   #deduplicated
rownames(expreSet) <- expreSet[,1]
expreSet<- expreSet[sapply(expreSet[, 1], function(x) { !grepl('///', x) }),]
expreSet<- expreSet[,-1]
expreSet[1:4,1:4]

#Screening DEGs
target <- read.table("T2.txt",header=T,sep="\t") #T=target
groups <- factor(target$patients)
treat <- factor(target$group,level=c('C','T'))
design <- model.matrix(~groups+treat)
fit <- lmFit(expreSet,design)
fit <- eBayes(fit)
AG <- topTable(fit,adjust.method="BH",coef = 'treatT',number=Inf) #AG=all genes
sigDEGs <-subset(AG,(logFC>1 |logFC<(-1))&adj.P.Val<0.05) # screening DEGs
sigDEGs_up <- subset(AG,(logFC>1 &adj.P.Val<0.05))
sigDEGs_down <- subset(AG,(logFC<(-1))&adj.P.Val<0.05)
nrow(sigDEGs)  #n=931
nrow(sigDEGs_up)  #n=388
nrow(sigDEGs_down)  #n=543
#write.csv(allDEGs,"allDEGs.csv")
#write.csv(sigDEGs,"sigDEGs.csv")
#write.csv(sigDEGs_up,"sigDEGs_up.csv")
#write.csv(sigDEGs_down,"sigDEGs_down.csv")

#pheatmap
sigDEG <-sigDEGs[order(sigDEGs$logFC,decreasing=T),]
nrow(sigDEGs)
CDEGs<-rownames(sigDEG[c(1:100,832:931),])
matrix<- expreSet[CDEGs,]
matrix <- t(scale(t(matrix)))
pheatmap(matrix, color = colorRampPalette(c("blue", "white", "red"))(42), scale="row",breaks = seq(-2, 2, by=0.1),key=TRUE, symkey=TRUE, 
         trace="none", cexRow=0.5,cellheight=2, cellwidth=6, fontsize_row=2,fontsize_col=5)

#volcano plot
AG$threshold<- ifelse(AG$adj.P.Val<0.05 & abs(AG$logFC)>= 1,ifelse(AG$logFC > 1,'Up','Down'),'Not')
color <- c(Up = "red",Not = "gray",Down = "blue")
p <- ggplot(data = AG, aes(x = logFC, y =-log10 (adj.P.Val),
                           colour=threshold,fill=threshold)) +
  scale_color_manual(values=c("blue", "grey","red"))+
  geom_point(alpha=0.6, size=1.2) + 
  xlim(c(-6, 6)) +
  theme_bw(base_size = 12, base_family = "Times") +
  geom_vline(xintercept=c(-1,1),lty=4,col="grey",lwd=0.6)+
  geom_hline(yintercept = -log10(0.05),lty=4,col="grey",lwd=0.6)+
  theme(legend.position="right",
        panel.grid=element_blank(),
        legend.title = element_blank(),
        legend.text= element_text(color="black",family = "Times", size=14),
        plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(color="black", size=14),
        axis.text.y = element_text( color="black", size=14),
        axis.title.x = element_text(color="black", size=14),
        axis.title.y = element_text(color="black", size=14))+
  labs(x="log2FC",y="-log10 (adj.P.Val)",title ="GSE113513")
p
