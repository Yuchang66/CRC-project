###################################
### Create by: Chang Yu
### Date: 2019-03-10
### Email: yuchang924@hotmail.com
###################################

rm(list=ls())
options(stringsAsFactors=F)

# install packages
if(F){
  BiocManager::install("edgeR")
  install.packages(c("pheatmap","ggplot2","gplots"))
}

# Load the required packages
library(edgeR)
library(pheatmap)
library(ggplot2)
library(gplots)

# Download the TCGA file first from ： Code：
exprSet <- read.table("TCGA_symbol.txt",sep="\t",header=T,check.names=F)
exprSet <- as.matrix(exprSet)
rownames(exprSet) <- exprSet[,1]
exp <- exprSet[,2:ncol(exprSet)]
dimnames <- list(rownames(exp),colnames(exp))
data <- matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)
data <- avereps(data) #Average Over Irregular Replicate Probes
data <- data[rowMeans(data)>1,]

#Screening DEGs
group <- c(rep("normal",51),rep("tumor",647))
design <- model.matrix(~group)
y <- DGEList(counts=data,group=group)
y <- calcNormFactors(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y,pair = c("normal","tumor"))
oderDEGS<- topTags(et, adjust.method = "BH",sort.by="PValue",n=Inf)
allDEGs <- oderDEGS$table
sigDEGs <- subset(allDEGs,(allDEGs$FDR<0.05)& (abs(allDEGs$logFC)>1))
nrow(sigDEGs) #12237
sigDEGs_up <- subset(allDEGs,(allDEGs$FDR<0.05)& (allDEGs$logFC)>1)
nrow(sigDEGs_up) #8461
sigDEGs_down <- subset(allDEGs,(allDEGs$FDR<0.05)& (allDEGs$logFC)< -1)
nrow(sigDEGs_down) #3776
write.csv(allDEGs,"allDEGs.csv")
write.csv(sigDEGs,"sigDEGs.csv")
write.csv(sigDEGs_up,"sigDEGs_up.csv")
write.csv(sigDEGs_down,"sigDEGs_down.csv")
count <- y$pseudo.counts
normExp <- rbind(id=colnames(count),count) #All gene normal expression
diffExp <- rbind(id=colnames(count),count[rownames(sigDEGs),]) #DEGs normal expression
#write.csv(normExp,"normExp.csv")
#write.csv(diffExp,"diffExp.csv")

# heatmap 
dev.off()
dev.new()
diffExp <- as.data.frame(diffExp)
diffExp <- diffExp[-1,]
sigDEG <- sigDEGs[order(sigDEGs$logFC,decreasing=T),]
nrow(sigDEGs)
CDEGs<-sigDEG[c(1:100,12138:12237),] #CDEGs==choose DEGs  including top 100 up/down DEGs
CDEGs <- rownames(CDEGs)
matrix <-diffExp[CDEGs,]
matrix[1:10,1:4]
matrixexp <- matrix[,1:ncol(matrix)]
M_dim <- list(rownames(matrix),colnames(matrix))
heat <- matrix(as.numeric(as.matrix(matrixexp)),nrow=nrow(matrixexp),dimnames=M_dim)
choose_matrix <- t(scale(t(log2(heat+0.0001))))
group_list <- ifelse(as.numeric(substr(colnames(matrix),14,15))=="11","normal","tumor")
annotation_col <- data.frame( group_list=group_list)
rownames(annotation_col)=colnames(choose_matrix)
pheatmap(choose_matrix, color = colorRampPalette(c("blue", "white", "red"))(42),
         scale="row",breaks = seq(-2, 2, by=0.1),key=TRUE, symkey=TRUE, 
         trace="none", cellheight=1.4, cellwidth=0.39, show_colnames = F,
         fontsize_row=0.4,fontsize_col=0.1, cluster_cols  = FALSE,annotation_col=annotation_col)

# volvano plot
data <- allDEGs
head(data)
data$threshold<- ifelse(data$FDR<0.05 & abs(data$logFC)>= 1,ifelse(data$logFC > 1,'Up','Down'),'Not')
color <- c(Up = "red",Not = "gray",Down = "blue")
p <- ggplot(data = data, aes(x = logFC, y =-log10 (FDR),
                             colour=threshold,fill=threshold)) 
+  scale_color_manual(values=c("blue", "grey","red"))
+  geom_point(alpha=0.6, size=1.2) 
+  xlim(c(-6, 6))
+  theme_bw(base_size = 12, base_family = "Times")
+  geom_vline(xintercept=c(-1,1),lty=4,col="grey",lwd=0.6)
+  geom_hline(yintercept = -log10(0.05),lty=4,col="grey",lwd=0.6)
+  theme(legend.position="right",
        panel.grid=element_blank(),
        legend.title = element_blank(),
        legend.text= element_text(color="black",family = "Times", size=14),
        plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text( color="black", size=14),
        axis.text.y = element_text( color="black", size=14),
        axis.title.x = element_text( color="black", size=14),
        axis.title.y = element_text(color="black", size=14))
+  labs(x="log2FC",y="-log10 (adj.P.Val)",title ="TCGA")
p



